import numpy as np
import cv2

# 准备数据（示例数据）
objectPoints = np.array([
[ 1.204755858699625 , 0.31834226255255316 , -0.5034688562605344 ],
[ 1.2050870783140035 , -0.3938650342689729 , -0.5128800707937429 ],
[ 1.2136868841613169 , 0.320789961533718 , 0.5031065066325727 ],
[ 1.2139557181975236 , -0.40229650588414506 , 0.43524577031532224 ],
[ 0.9136697113011444 , 0.24726697164693306 , -0.3878650297401189 ],
[ 0.9115003526039348 , -0.3064207718433517 , -0.395004801763296 ],
[ 0.9366117950814026 , 0.2529805289102085 , 0.39469454255554476 ],
[ 0.9366376945657315 , -0.31852012251294776 , 0.34202022970372026 ],
[ 0.8614003721398075 , 0.23450422591155856 , -0.3671064478881557 ],
[ 0.8586018434669854 , -0.2906650488837803 , -0.3737660145506028 ],
[ 1.3432284842506277 , 0.352493072890164 , 0.553792619707547 ],
[ 1.2973323788972781 , -0.42748417670162925 , 0.4632743642246928 ],
[ 0.7208138737058666 , 0.20017684083020648 , -0.311273020838048 ],
[ 0.719302436073019 , -0.24917497842357567 , -0.3178372082238443 ],
[ 0.7297050727165316 , 0.20234361493810732 , 0.31373755639412776 ],
[ 0.7291023108674299 , -0.2558247244998622 , 0.2722534035597437 ],
[ 1.107426744399204 , 0.29457714980392474 , -0.4648149452258444 ],
[ 1.1142779709622406 , -0.36681770985504203 , -0.47642015274528626 ],
[ 0.6811269726830401 , 0.19045494817944006 , 0.29473026399101243 ],
[ 0.6964766610283956 , -0.2459686793973684 , 0.2612856928995552 ],
[ 0.5883381347969606 , 0.1678298818112401 , -0.25866075304083097 ],
[ 0.5879378050495949 , -0.21004826640730673 , -0.26509421997898974 ],
[ 0.56328010037957 , 0.16161392326489546 , 0.2486199805686401 ],
[ 0.5632552575190053 , -0.20572316189551873 , 0.21650087437045232 ],
[ 0.681161271583473 , 0.19049475785854308 , -0.2955251311572483 ],
[ 0.6822734796771545 , -0.23814597235187568 , -0.3029700571749591 ],
[ 0.534493078137501 , 0.15456878740790744 , 0.23735639988531249 ],
[ 0.5396922881908137 , -0.1986049070992732 , 0.20857975000476064 ],
[ 0.5117365170605185 , 0.14912585788870852 , -0.22823869343019537 ],
[ 0.5103533249820692 , -0.18693987273326865 , -0.23394399873370644 ],
[ 0.5371918614726949 , 0.15522926889450006 , 0.23841236057437448 ],
[ 0.5342546798843081 , -0.19696223291552423 , 0.20675179822806256 ],
], dtype=np.float32)
imagePoints = np.array([
                        [114, 408],
                        [112, 105],
                        [545, 412],
                        [516, 102],

                        [111, 424],
                        [109, 112],
                        [549, 427],
                        [521, 109],

                        [109, 428],
                        [107, 114],
                        [542, 408],
                        [514, 101],

                        [108, 441],
                        [105, 120],
                        [554, 444],
                        [526, 117],

                        [115, 412],
                        [112, 107],
                        [559, 450],
                        [529, 119],

                        [107, 458],
                        [104, 128],
                        [564, 468],
                        [536, 128],

                        [108, 445],
                        [105, 122],
                        [565, 474],
                        [537, 130],

                        [102, 473],
                        [99, 135],
                        [564, 474],
                        [536, 131]
                        ], dtype=np.float32)

# 定义相机的内参数矩阵（示例参数）
fx = 518.9676  # 焦距
fy = 518.8752
cx = 320.555  # 图像中心点坐标
cy = 237.8842
cameraMatrix = np.array([[fx, 0, cx],
                         [0, fy, cy],
                         [0, 0, 1]], dtype=np.float32)

# 运行PnP算法
distCoeffs = np.zeros((4, 1), dtype=np.float32)  # 畸变参数，默认为空
success, rvec, tvec = cv2.solvePnP(objectPoints, imagePoints, cameraMatrix, distCoeffs)

if success:
    # 得到旋转矩阵（从旋转向量转换）
    rotationMatrix, _ = cv2.Rodrigues(rvec)

    # 打印结果
    print("旋转矩阵:")
    print(rotationMatrix)
    print("平移矩阵:")
    print(tvec)
else:
    print("PnP求解失败")